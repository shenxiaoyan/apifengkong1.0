package apifengkong.entity;

import java.util.Date;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

public interface APISearchLogRepository extends JpaRepository<APISearchLog, Integer> {
	APISearchLog findFirstByApiAndParametersOrderByCreateTimeDesc(SupplyAPI api,String parameters);
	/**
	 *员工消费记录
	 * @return
	 */
	//员工消费积分总记录
	@Query(value="select l.user.username,SUM(l.price) from #{#entityName} l where l.user.role.name!='ROLE_ADMIN' group by l.user")
	List<?> getStuffConsumReport();
	//员工不同时间段消费
	@Query(value="select l.user.username,SUM(l.price) from #{#entityName} l where l.user.role.name!='ROLE_ADMIN' and createTime between ?1 and ?2 group by l.user")
	List<?> getStuffDaysConsum(Date startTime,Date endTime);
	//接口数量报表总记录
	@Query(value="select l.api.name , count(l.api.id) from #{#entityName} l where l.customer.id=? group by l.api.id ")
	List<?> getAPICount(Integer customerId);
	//接口查询数量时间段记录
	@Query(value="select l.api.name , count(l.api.id) from #{#entityName} l where l.customer.id=?1 and createTime between ?2 and ?3 group by l.api.id ")
	List<?> getAPIDaysCount(Integer customerId,Date startTime,Date endTime);
	//本人消费报表
	@Query(value="select l.price from #{#entityName} l where l.user.id=?")
	List<APISearchLog> getSelfConsum(Integer userId);
	//本人消费记录时间段记录
	@Query(value="select DATE_FORMAT(l.createTime,'%Y-%m-%d'),SUM(l.price) from #{#entityName} l where l.user.id=?1 and createTime between ?2 and ?3 and l.user.role.name!='ADMIN' group by DATE_FORMAT(l.createTime,'%Y-%m-%d')")
	List<APISearchLog> getSelfDaysConsum(Integer Id,Date startTime,Date endTime);
	@Query(value="select l from #{#entityName} l where l.customer.id=?")
	List<APISearchLog> getCustomerConsum(Integer customerId);
	/**
	 * 管理员报表类
	 */
	//所有公司阶段内消费积分
	@Query(value="select l.customer.companyName,SUM(l.price) from #{#entityName} l where  createTime between ?1 and ?2  group by l.customer.id")
	List<APISearchLog> getAllCustomerConsum(Date startDate,Date endDate);
	
	//公司接口数量查询报表
	@Query(value="select l.api.description,SUM(l.api.id) from #{#entityName} l GROUP BY l.customer.id ")
	List<?> getApiSearchCountByCustomer();
}


